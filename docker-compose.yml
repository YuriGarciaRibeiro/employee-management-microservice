version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: employee-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: employeedb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - employee-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: employee-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - employee-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: employee-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - employee-network
    depends_on:
      - postgres

  sonarqube:
    image: sonarqube:community
    container_name: employee-sonarqube
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: 'true'
    ports:
      - "9000:9000"
    volumes:
      - sonarqube-data:/opt/sonarqube/data
      - sonarqube-extensions:/opt/sonarqube/extensions
      - sonarqube-logs:/opt/sonarqube/logs
    networks:
      - employee-network

  seq:
    image: datalust/seq:latest
    container_name: employee-seq
    environment:
      ACCEPT_EULA: 'Y'
    ports:
      - "5341:80"
      - "5342:5341"
    volumes:
      - seq-data:/data
    networks:
      - employee-network

  # Microservices
  cadastro-api:
    build:
      context: .
      dockerfile: src/Services/Cadastro/EmployeeManagement.Cadastro.API/Dockerfile
    container_name: employee-cadastro-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=employeedb;Username=postgres;Password=postgres;Include Error Detail=true
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - JwtSettings__Secret=${JWT_SECRET:-your-super-secret-key-change-this-in-production-min-32-chars}
      - JwtSettings__Issuer=EmployeeManagement
      - JwtSettings__Audience=EmployeeManagementUsers
      - JwtSettings__ExpirationMinutes=60
      - JwtSettings__RefreshTokenExpirationDays=7
      - EmailSettings__SmtpHost=${SMTP_HOST:-smtp.gmail.com}
      - EmailSettings__SmtpPort=${SMTP_PORT:-587}
      - EmailSettings__SmtpUser=${SMTP_USER:-noreply@employeemanagement.com}
      - EmailSettings__SmtpPassword=${SMTP_PASSWORD:-}
      - EmailSettings__FromEmail=${SMTP_FROM:-noreply@employeemanagement.com}
      - EmailSettings__FromName=Employee Management System
      - Serilog__WriteTo__1__Name=Seq
      - Serilog__WriteTo__1__Args__serverUrl=http://seq:5341
    ports:
      - "5001:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      seq:
        condition: service_started
    networks:
      - employee-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  ativacao-worker:
    build:
      context: .
      dockerfile: src/Services/Ativacao/EmployeeManagement.Ativacao.Worker/Dockerfile
    container_name: employee-ativacao-worker
    environment:
      - DOTNET_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=employeedb;Username=postgres;Password=postgres;Include Error Detail=true
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - Hangfire__DashboardEnabled=true
      - Hangfire__WorkerCount=5
      - Serilog__WriteTo__1__Name=Seq
      - Serilog__WriteTo__1__Args__serverUrl=http://seq:5341
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      seq:
        condition: service_started
    networks:
      - employee-network
    restart: unless-stopped

  notificacoes-api:
    build:
      context: .
      dockerfile: src/Services/Notificacoes/EmployeeManagement.Notificacoes.API/Dockerfile
    container_name: employee-notificacoes-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - SignalR__EnableDetailedErrors=true
      - Cors__AllowedOrigins=http://localhost:3000,http://localhost:5173
      - Serilog__WriteTo__1__Name=Seq
      - Serilog__WriteTo__1__Args__serverUrl=http://seq:5341
    ports:
      - "5002:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      seq:
        condition: service_started
    networks:
      - employee-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

volumes:
  postgres-data:
  rabbitmq-data:
  pgadmin-data:
  sonarqube-data:
  sonarqube-extensions:
  sonarqube-logs:
  seq-data:

networks:
  employee-network:
    driver: bridge
